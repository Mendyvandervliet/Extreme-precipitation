
##Starting phase: plotting of Kooy values of
#1.   a) absolute hourly value of extreme event (> 2 mm/hr)
#     b) "....." (> 5 mm/hr)
#     c) "....." (> 10 mm/hr)
#Note: On all T range 2-12 mm defines 95 quantile in LM09

#2.   max hourly value of extreme event (>= 2 mm/hr, >= 5 mm/hr, >= 10 mm/hr)
#3.   Occurrence of extreem wet event; 1 a-c, 2
#4.   Quantile regression all events, wet events, summer/winter
#5.   Relation to temperature, Td, CAPE (quantiles)
#6.   Repeat 1-4 for Norway, Spain, Poland, Germany
#7.   Hirlam model
#------------------------------------------------------------------------------------

#Packages needed
library(PCICt)
library(climdex.pcic)
library(ggplot2)
library(scales)
library(base)
library(verification)
library(actuar)
library(plyr)
library(qcc)
library(gPdtest)
library(reshape2)
library(quantreg)
#------------------------------------------------------------------------------------


# Create correct data format and units
ifile_tg <- read.table('./Data/KNMI_20151108_hourly_235_DeKooy_1957.txt',sep=",")
names(ifile_tg) <- c("STN", "YYYYMMDD", "HH", "DD", "FH", "FX", "T", "TD", "DR", "RH", "U")
file_p <- ifile_tg
a_p2<-as.PCICt(strptime(ifile_tg$YYYYMMDD,"%Y%m%d"),cal="gregorian")
time_p2 <- as.POSIXlt(a_p2)
file_p$Date <- as.Date(time_p2)
file_p$RH <- file_p$RH * 0.1
file_p$T <- file_p$T * 0.1

#Get days
file_p$Day <- format(file_p$Date,format="%d")
#  Get months
file_p$Month <- months(file_p$Date)
file_p$month <- format(file_p$Date,format="%m")
#  Get years
file_p$Year <- format(file_p$Date,format="%Y")
file_p$Year <- as.integer(file_p$Year)
#yearly mean
y_mean <- aggregate( file_p$RH ~ Year, file_p, mean )
#montly mean
m_mean <- aggregate( file_p$RH ~ Month + Year, file_p, mean )
#daily mean
d_mean <- aggregate( file_p$RH ~ Day + month + Year, file_p, mean )

#------------------------------------------------------------------------------------
# Function for multiple plots on one page (from R Cookbook)
fun.plot <- function(..., plotlist=NULL, cols) 
{
  require(grid)
  
  plots <- c(list(...), plotlist)
  numPlots = length(plots)
  plotCols = cols                          
  plotRows = ceiling(numPlots/plotCols)
  
  grid.newpage()
  pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))
  vplayout <- function(x, y)
    viewport(layout.pos.row = x, layout.pos.col = y)
  
  for (i in 1:numPlots) 
  {
    curRow = ceiling(i/plotCols)
    curCol = (i-1) %% plotCols + 1
    print(plots[[i]], vp = vplayout(curRow, curCol ))
  }
}

#------------------------------------------------------------------------------------



# Selection criteria


#Select all variables with highest 5% RH of all data
Break_95 <- quantile(file_p$RH, probs = 0.95)
Break_99 <- quantile(file_p$RH, probs = 0.99)
data_p <- subset(file_p, RH >= Break_95)

#Select all variables with highest 5% RH of wet data
data_rain <- subset(file_p, RH > 0)
Break_95_r <- quantile(data_rain$RH, probs = 0.95)
Break_99_r <- quantile(data_rain$RH, probs = 0.99)
data_w <- subset(data_rain, RH >= Break_95_w)

#All : 95% - 0.5 mm/hr, 99% 1.9 mm/hr
#Wet: 95% -2.5 mm/hr, 99% 5.1 mm/hr 


#Select data with threshold of 1mm, 2 mm, 5mm and 10 mm
data_1mm_K <- subset(file_p, RH > 1)
data_2mm_K <- subset(file_p, RH > 2)
data_3mm_K <- subset(file_p, RH > 3)
data_3.5mm_K <- subset(file_p, RH > 3.5)
data_5mm_K <- subset(file_p, RH > 5)
data_7.5mm_K <- subset(file_p, RH > 7.5)
data_10mm_K <- subset(file_p, RH > 10)


#------------------------------------------------------------------------------------

# First time plotting absolute values with threshold indices

# Spot trends
plot(data_2mm$YYYYMMDD,data_2mm$RH)  
plot(data_5mm$YYYYMMDD,data_5mm$RH)
plot(data_10mm$YYYYMMDD,data_10mm$RH)


#Linear fits
fit1 <- lm(RH ~ YYYYMMDD, data = data_2mm)
fit2 <- lm(RH ~ YYYYMMDD + I(YYYYMMDD^2), data = data_2mm)
fit3 <- lm(RH ~ YYYYMMDD + I(YYYYMMDD^2) + I(YYYYMMDD^3), data = data_2mm)

anova(fit1,fit2,fit3)
coef(fit1)
length(data_2mm$YYYYMMDD)
#Increase of RH > 2mm over 1957-2014:
coef(fit1)[2] * length(data_2mm$YYYYMMDD) 
# = 0.00216755

#------------------------------------------------------------------------------------


#To distinguis between period 1957-1980, 1980-2015:
# (because of underestimation automatic rain gauge used since 1980 more often, compared to manual)

period1 <- subset(data_p, Year > 56 & Year < 80)
period2 <-subset(data_p, Year > 80 | Year < 15)

fit_period1 <- lm(RH ~ YYYYMMDD, data = period1)
coef(fit_period1)
length(period1$YYYYMMDD)
coef(fit_period1)[2] * length(period1$YYYYMMDD)
# -0.00633 mm between 1957-1980 ;  wet sixties

fit_period2 <- lm(RH ~ YYYYMMDD, data = period2)
coef(fit_period2)
length(period2$YYYYMMDD)
coef(fit_period2)[2] * length(period2$YYYYMMDD)
#0.005887014 mm between 1980-2015

#We would maybe expect no increase because of increase in underestimation error since 1980
#Correction could give bigger increase ;
# compare scale with The Bilt!

#------------------------------------------------------------------------------------

# More complex plotting

plot_1mm <- ggplot(data_1mm, aes(x = YYYYMMDD, y = RH)) +        # data
  geom_point(shape=20, colour="darkorchid") +   # marker shape and colour
  #geom_smooth(method = "loess", se = FALSE) +
  geom_smooth(method = "lm",
              level=0.90,               # confidence level
              fill="gray30"             # colour for the confidence interval
  ) +   
  ggtitle("> 1 mm/hr") + # title
  ylim(1, 3) +
  xlab("Time") + ylab("Precipitation (mm)")   # x and y-axis label

coef(lm(cbind(y, s, t) ~ x, data=x1))
coef(lm(RH ~ YYYYMMDD, data=data_1mm))

plot_2mm <- ggplot(data_2mm, aes(x = YYYYMMDD, y = RH)) +        # data
  geom_point(shape=20, colour="darkorchid") +   # marker shape and colour
  #geom_smooth(method = "loess", se = FALSE) +  
  geom_smooth(method = "lm",
              level=0.90,               # confidence level
              fill="gray30"             # colour for the confidence interval
              ) +   
  ggtitle("> 2 mm/hr") + # title
  ylim(2, 4) +
  xlab("Time") + ylab("Precipitation (mm)")   # x and y-axis label

## Positive trend 
plot_5mm <- ggplot(data_5mm, aes(x = YYYYMMDD, y = RH)) +        # data
    geom_point(shape=20, colour="darkorchid") +   # marker shape and colour
    #geom_smooth(method = "loess", se = FALSE) +  
    geom_smooth(method = "lm",
                level=0.90,               # confidence level
                fill="gray30"             # colour for the confidence interval
    ) +   
    ggtitle("> 5 mm/hr") + # title
    ylim(5, 7) +
    xlab("Time") + ylab("Precipitation (mm)")   # x and y-axis label



## Positive trend 

plot_7.5mm <- ggplot(data_7.5mm_K, aes(x = YYYYMMDD, y = RH)) +        # data
  geom_point(shape=20, colour="darkorchid") +   # marker shape and colour
  #geom_smooth(method = "loess", se = FALSE) +  
  geom_smooth(method = "lm",
              level=0.90,               # confidence level
              fill="gray30"             # colour for the confidence interval
  ) +   
  ggtitle("> 7.5 mm/hr") + # title
  ylim(7.5, 10) +
  xlab("Time") + ylab("Precipitation (mm)")   # x and y-axis label
## Positive trend
  
plot_10mm <- ggplot(data_10mm, aes(x = YYYYMMDD, y = RH)) +        # data
    geom_point(shape=20, colour="darkorchid") +   # marker shape and colour
    #geom_smooth(method = "loess", se = FALSE) +  
    geom_smooth(method = "lm",
                level=0.90,               # confidence level
                fill="gray30"             # colour for the confidence interval
    ) +   
    ggtitle("> 10 mm/hr") + # title
    ylim(10, 12) +
    xlab("Time") + ylab("Precipitation (mm)")   # x and y-axis label
## Positive trend 

fun.plot(plot_1mm, plot_2mm, plot_5mm , plot_7.5mm, plot_10mm, cols=2)
  

# Plotting occurence of extreme events


Freqplotting<- function(data, title, cl= 0.90) 
{Freq <- count(data, vars=c("Year"))
output <- ggplot(Freq, aes(x = Year , y = freq )) +        # data
  geom_point(shape=20, colour="darkorchid") +   # marker shape and colour
  #geom_smooth(method = "loess", se = FALSE) +  
  geom_smooth(method = "lm",
              level=cl,               # confidence level
              fill="gray30"             # colour for the confidence interval
  ) +   
  ggtitle(title) + # title
  xlab("Time") + ylab("Frequency")   # x and y-axis label
}

Freqhistplot<- function(data, title, cl= 0.90) 
{Freq <- count(data, vars=c("Year"))
ggplot(Freq, aes(x = Year , y = freq )) +        # data
  geom_bar(stat="identity") +   # marker shape and colour
  geom_smooth(method = "lm",
              level=cl,               # confidence level
              fill="gray30"             # colour for the confidence interval
  ) +   
  ggtitle(title) + # title
  xlab("Time") + ylab("Frequency")   # x and y-axis label
}


Freqplotting_all<- function(func, a1,a2,b1,b2,c1,c2,d1,d2,e1,e2,f1,f2)
{fun.plot(func(a1,a2), func(b1,b2), func(c1,c2),
          func(d1,d2), func(e1,e2), func(f1,f2), cols=2)
}

Freqplotting_all(Freqplotting, a1=data_1mm_K, a2="> 1 mm/hr", b1=data_2mm_K, b2="> 2 mm/hr", 
                 c1=data_3mm_K, c2="> 3 mm/hr", d1=data_5mm_K, d2="> 5 mm/hr",
                 e1=data_7.5mm_K, e2="> 7.5 mm/hr", f1=data_10mm_K, f2="> 10 mm/hr")

Freqplotting_all(Freqhistplot, a1=data_1mm_K, a2="> 1 mm/hr", b1=data_2mm_K, b2="> 2 mm/hr", 
                 c1=data_3mm_K, c2="> 3 mm/hr", d1=data_5mm_K, d2="> 5 mm/hr",
                 e1=data_7.5mm_K, e2="> 7.5 mm/hr", f1=data_10mm_K, f2="> 10 mm/hr")



# Difference summer / winter
plot(data_2mm$month,data_2mm$RH)  # Shows higher summer than winter values 
plot(data_5mm$month,data_5mm$RH)
plot(data_10mm$month,data_10mm$RH)



#Percentiles summer vs winter
data_summer <- subset(file_K,month == "06" | month == "07" | month == "08" )
data_winter <- subset(file_K, month == "12" | month == "01" | month == "02")
Break_95_s <- quantile(data_summer$RH, probs = 0.95)
# 0.3 mm
Break_99_s <- quantile(data_summer$RH, probs = 0.99)
# 2,4 mm
Break_95_w <- quantile(data_winter$RH, probs = 0.95)
# 0.5 mm
Break_99_w <- quantile(data_winter$RH, probs = 0.99)
# 1.7 mm

#Select all variables with highest 5% RH of wet data
data_rain_K_s <- subset(data_summer, RH > 0)
Break_95_rs <- quantile(data_rain_K_s$RH, probs = 0.95)
# 4.2 mm
Break_99_rs <- quantile(data_rain_K_s$RH, probs = 0.99)
# 8.8 mm
data_rain_K_w <- subset(data_winter, RH > 0)
Break_95_rw <- quantile(data_rain_K_w$RH, probs = 0.95)
# 2 mm
Break_99_rw <- quantile(data_rain_K_w$RH, probs = 0.99)
# 3.4 mm


# Trend in extreme (>1,2, 5 and 7.5 mm/hr) per season: DJF(winter) JJA(Summer)
data_1mm_JJA_K <- subset(data_1mm_K, month == "06" | month == "07" | month == "08")
data_1mm_DJF_K <- subset(data_1mm_K, month == "12" | month == "01" | month == "02")

data_2mm_JJA_K <- subset(data_2mm_K, month == "06" | month == "07" | month == "08")
data_2mm_DJF_K <- subset(data_2mm_K, month == "12" | month == "01" | month == "02")

data_3mm_JJA_K <- subset(data_3mm_K, month == "06" | month == "07" | month == "08")
data_3mm_DJF_K <- subset(data_3mm_K, month == "12" | month == "01" | month == "02")
data_3.5mm_DJF_K <- subset(data_2mm_K, month == "12" | month == "01" | month == "02")

data_5mm_JJA_K <- subset(data_5mm_K, month == "06" | month == "07" | month == "08")
data_5mm_DJF_K <- subset(data_5mm_K, month == "12" | month == "01" | month == "02")

data_7.5mm_JJA_K <- subset(data_7.5mm_K, month == "06" | month == "07" | month == "08")
data_7.5mm_DJF_K <- subset(data_7.5mm_K, month == "12" | month == "01" | month == "02")

data_10mm_JJA_K <- subset(data_10mm_K, month == "06" | month == "07" | month == "08")



# Plotting intensity plots (exceedence over thresholds) for summer and winter (seperately)

Plotting_all(func=Intensity_plotting, a1=data_1mm_JJA_K, a2="Summer P > 1 mm/hr", a3=1, b1=data_2mm_JJA_K, b2="Summer P > 2 mm/hr", b3=2, 
             c1=data_3mm_JJA_K, c2="Summer P > 3 mm/hr", c3=3, d1=data_5mm_JJA_K, d2="Summer P > 5 mm/hr", d3=5,
             e1=data_7.5mm_JJA_K, e2="Summer P > 7.5 mm/hr", e3=7.5, f1=data_10mm_JJA_K, f2="Summer P > 10 mm/hr", f3=10,cols=2)

Plotting_all(func=Intensity_plotting, a1=data_1mm_DJF_K, a2="Winter P > 1 mm/hr", a3=1, b1=data_2mm_DJF_K, b2="Winter P > 2 mm/hr", b3=2, 
             c1=data_3mm_DJF_K, c2="Winter P > 3 mm/hr", c3=3, d1=data_3.5mm_DJF_K, d2="Winter P > 3.5 mm/hr", d3=3.5,
             e1=data_5mm_DJF_K, e2="Winter P > 5 mm/hr", e3=5, f1=data_7.5mm_DJF_K, f2="Winter P > 7.5 mm/hr", f3=7.5,cols=2)

# Plotting Frequency plots (exceedence over thresholds) for summer and winter (seperately)

Freqplotting_all(func=Freqhistplot, a1=data_1mm_JJA_K, a2="Summer P > 1 mm/hr", b1=data_2mm_JJA_K, b2="Summer P > 2 mm/hr", 
                 c1=data_3mm_JJA_K, c2="Summer P > 3 mm/hr", d1=data_5mm_JJA_K, d2="Summer P > 5 mm/hr",
                 e1=data_7.5mm_JJA_K, e2="Summer P > 7.5 mm/hr", f1=data_10mm_JJA_K, f2="Summer P > 10 mm/hr")

Freqplotting_all(func=Freqhistplot, a1=data_1mm_DJF_K, a2="Winter P > 1 mm/hr", b1=data_2mm_DJF_K, b2="Winter P > 2 mm/hr",
                 c1=data_3mm_DJF_K, c2="Winter P > 3 mm/hr", d1=data_3.5mm_DJF_K, d2="Winter P > 3.5 mm/hr", 
                 e1=data_5mm_DJF_K, e2="Winter P > 5 mm/hr", f1=data_7.5mm_DJF_K, f2="Winter P > 7.5 mm/hr")


# Quantify trends


